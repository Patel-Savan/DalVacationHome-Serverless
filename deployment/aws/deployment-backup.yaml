AWSTemplateFormatVersion: '2010-09-09'
Description: >
  CloudFormation template to create SNS topic, SQS queue, and Lambda functions for notifications in DALVacationHome project.

Parameters:
  S3BucketName:
    Type: String
    Description: S3 bucket name where Lambda code is stored
  S3KeyBookingRequestPublisher:
    Type: String
    Description: S3 key (file name) for the Booking Request Publisher Lambda function
  S3KeyBookingApproval:
    Type: String
    Description: S3 key (file name) for the Booking Approval Lambda function
  S3KeyLoginRegister:
    Type: String
    Description: S3 key (file name) for the Login/Register Lambda function

Resources:
  NotificationTopic:
    Type: 'AWS::SNS::Topic'
    Properties:
      TopicName: 'NotificationTopic'

  BookingRequestQueue:
    Type: 'AWS::SQS::Queue'
    Properties:
      QueueName: 'BookingRequestQueue'

  BookingRequestQueueSubscription:
    Type: 'AWS::SNS::Subscription'
    Properties:
      TopicArn:
        Ref: NotificationTopic
      Protocol: 'sqs'
      Endpoint:
        Fn::GetAtt:
          - BookingRequestQueue
          - Arn

  BookingRequestPublisherFunction:
    Type: 'AWS::Lambda::Function'
    Properties: 
      FunctionName: 'BookingRequestPublisherFunction'
      Handler: 'BookingRequestPublisher.lambda_handler'
      Role: 'arn:aws:iam::138012733653:role/LabRole'
      Code: 
        S3Bucket:
          Ref: S3BucketName
        S3Key:
          Ref: S3KeyBookingRequestPublisher
      Runtime: 'python3.8'
      Environment:
        Variables:
          SNS_TOPIC_ARN: 
            Ref: NotificationTopic

  BookingRequestPublisherFunctionUrl:
    Type: 'AWS::Lambda::Url'
    Properties:
      AuthType: 'NONE'
      TargetFunctionArn: 
        Ref: BookingRequestPublisherFunction
      Cors:
        AllowOrigins:
          - '*'
        AllowMethods:
          - '*'

  BookingApprovalFunction:
    Type: 'AWS::Lambda::Function'
    Properties: 
      FunctionName: 'BookingApprovalFunction'
      Handler: 'BookingApproval.lambda_handler'
      Role: 'arn:aws:iam::138012733653:role/LabRole'
      Code: 
        S3Bucket:
          Ref: S3BucketName
        S3Key:
          Ref: S3KeyBookingApproval
      Runtime: 'python3.8'
      Environment:
        Variables:
          SNS_TOPIC_ARN: 
            Ref: NotificationTopic

  BookingApprovalFunctionUrl:
    Type: 'AWS::Lambda::Url'
    Properties:
      AuthType: 'NONE'
      TargetFunctionArn: 
        Ref: BookingApprovalFunction
      Cors:
        AllowOrigins:
          - '*'
        AllowMethods:
          - '*'

  LoginRegisterFunction:
    Type: 'AWS::Lambda::Function'
    Properties: 
      FunctionName: 'LoginRegisterFunction'
      Handler: 'LoginRegister.lambda_handler'
      Role: 'arn:aws:iam::138012733653:role/LabRole'
      Code: 
        S3Bucket:
          Ref: S3BucketName
        S3Key:
          Ref: S3KeyLoginRegister
      Runtime: 'python3.8'
      Environment:
        Variables:
          SNS_TOPIC_ARN: 
            Ref: NotificationTopic

  LoginRegisterFunctionUrl:
    Type: 'AWS::Lambda::Url'
    Properties:
      AuthType: 'NONE'
      TargetFunctionArn: 
        Ref: LoginRegisterFunction
      Cors:
        AllowOrigins:
          - '*'
        AllowMethods:
          - '*'

  BookingApprovalEventSourceMapping:
    Type: 'AWS::Lambda::EventSourceMapping'
    Properties:
      BatchSize: 10
      EventSourceArn: 
        Fn::GetAtt:
          - BookingRequestQueue
          - Arn
      FunctionName:
        Ref: BookingApprovalFunction

Outputs:
  NotificationTopicArn:
    Description: 'SNS Topic ARN for Notifications'
    Value: 
      Ref: NotificationTopic
  SQSQueueURL:
    Description: 'SQS Queue URL for Booking Requests'
    Value: 
      Ref: BookingRequestQueue
  BookingRequestPublisherFunctionUrl:
    Description: 'URL for the Booking Request Publisher Lambda function'
    Value: 
      Ref: BookingRequestPublisherFunctionUrl
  BookingApprovalFunctionUrl:
    Description: 'URL for the Booking Approval Lambda function'
    Value: 
      Ref: BookingApprovalFunctionUrl
  LoginRegisterFunctionUrl:
    Description: 'URL for the Login/Register Lambda function'
    Value: 
      Ref: LoginRegisterFunctionUrl
  LambdaFunctionArn:
    Description: 'Lambda Function ARN for Booking Approval'
    Value: 
      Ref: BookingApprovalFunction
